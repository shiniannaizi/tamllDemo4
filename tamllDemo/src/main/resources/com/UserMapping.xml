<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tamll.learn.dao.UserMapping" >
    <resultMap id="BaseResultMap" type="com.tamll.learn.entiy.User" >
        <id column="user_id" property="user_Id" jdbcType="INTEGER" />
        <result column="user_name" property="user_Name" jdbcType="VARCHAR" />
        <result column="user_sex" property="user_Sex" jdbcType="VARCHAR" />
        <result column="user_password" property="user_Password" jdbcType="VARCHAR" />
        <result column="user_address" property="user_Address" jdbcType="VARCHAR" />
        <result column="user_email" property="user_Email" jdbcType="VARCHAR" />
        <result column="state" property="state" jdbcType="INTEGER" />
        
        <collection property="recives" ofType="com.tamll.learn.entiy.Recive">
            <id column="user_recive_id" property="user_Recive_Id" jdbcType="INTEGER"/>
            <result column="user_recive_name" property="user_Recive_Name" jdbcType="VARCHAR" />
            <result column="user_recive_phone" property="user_Recive_Phone" jdbcType="VARCHAR" />
            <result column="user_recive_address" property="user_Recive_Address" jdbcType="VARCHAR" />
            <result column="user_recive_detail_address" property="user_Recive_Detail_Address" jdbcType="VARCHAR" />
        </collection>
    </resultMap>
    <sql id="Base_Column_List" >
        user_id, user_name, user_password, user_address, user_email, user_sex, state
    </sql>
    <sql id="Recive_Colum_List">
        user_recive_id, user_recive_name, user_recive_phone, user_recive_address, user_recive_detail_address
    </sql>
    <select id="selectByUserId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
        select
        <include refid="Base_Column_List" />
        from user
        where user_id = #{user_Id,jdbcType=INTEGER}
    </select>
    <select id="selectByUserName" resultMap="BaseResultMap" parameterType="java.lang.String">
        SELECT
        <include refid="Base_Column_List" />
        FROM user
        WHERE user_name = #{user_Name,jdbcType=VARCHAR}
    </select>
    <select id="selectUserByEmail" resultMap="BaseResultMap" parameterType="java.lang.String">
        SELECT
        <include refid="Base_Column_List"/>
        FROM user
        WHERE user_email = #{user_Email,jdbcType=VARCHAR}
    </select>
    <select id="selectReciveByUserId" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        SELECT
        <include refid="Base_Column_List" />,<include refid="Recive_Colum_List" />
        FROM user u,recive r
        WHERE u.user_id = r.user_id and u.user_id = #{user_Id,jdbcType=INTEGER}
    </select>
    <insert id="insert" parameterType="com.tamll.learn.entiy.User">
        INSERT INTO user (user_name,user_sex,user_password,user_address,user_email,state)
        VALUES (#{user_Name,jdbcType=VARCHAR},#{user_Sex,jdbcType=VARCHAR},#{user_Password,jdbcType=VARCHAR},
        #{user_Address,jdbcType=VARCHAR},#{user_Email,jdbcType=VARCHAR},0)
    </insert>
    <update id="updateByUserId" parameterType="java.lang.Integer">
        update user
        SET
        user_name = #{user_Name,jdbcType=VARCHAR},
        user_sex = #{user_Sex,jdbcType=VARCHAR},
        user_password = #{user_Password,jdbcType=VARCHAR},
        user_address = #{user_Address,jdbcType=VARCHAR},
        user_email = #{user_Email,jdbcType=VARCHAR}
        WHERE user_id = #{user_Id,jdbcType=INTEGER}
    </update>
    <update id="updateStateByEmail" parameterType="java.lang.String">
        UPDATE user
        SET
        state = 1
        WHERE user_email = #{user_Email,jdbcType=VARCHAR}
    </update>
    <delete id="deleteByUserId" parameterType="java.lang.Integer">
        DELETE FROM user
        WHERE user_id = #{user_Id,jdbcType=INTEGER}
    </delete>
</mapper>